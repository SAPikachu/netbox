/* Debian specific configuration to work as a recursive resolver */

global {
    run_ipv4 = off;
    perm_cache = 131072;
    cache_dir = "/var/cache/pdnsd";
    run_as = "pdnsd";
    server_ip = any;  // Use eth0 here if you want to allow other
                            // machines on your network to query pdnsd.
    status_ctl = on;
    paranoid = off;
    min_ttl = 15m;          // Retain cached entries at least 15 minutes.
    max_ttl = 1w;           // One week.
    timeout = 10;           // Global timeout option (10 seconds).
    query_method=udp_tcp;  
    neg_rrs_pol = default;
    neg_domain_pol = off;

    debug = on;

    // delegation_only = "com","net";
}

server {
    label = "he-ipv6";
    root_server = off;
    ip = 2001:470:20::2;
    timeout = 2;
    uptest = none;
    interval = 30m;
    ping_timeout = 300;  // 30 seconds.
    purge_cache = off;
    edns_query = on;
    randomize_servers = off;
    policy = included;
    preset = on;
    lean_query = on;
}

server {
    label = "recurse";
    root_server = on;
    randomize_servers = on;
    ip = 198.41.0.4
    ,    192.228.79.201
    ,    192.33.4.12
    ,    128.8.10.90
    ,    192.203.230.10
    ,    192.5.5.241
    ,    192.112.36.4
    ,    128.63.2.53
/*
    ,    192.36.148.17
    ,    192.58.128.30
    ,    193.0.14.129
    ,    198.32.64.12
    ,    202.12.27.33
*/
    ;
    timeout = 2;
    uptest = none;
    interval = 30m;
    ping_timeout = 300;  // 30 seconds.
    purge_cache = off;
    edns_query = on;
    randomize_servers = on;
    exclude = 
        ".cn", 
        ".taobao.com", 
        ".xunlei.com",
        ".xunlei.net",
        ".sandai.net",
        ".infzm.com",
        ".baidu.com",
        ".shifen.com",
        ".acgpiping.net",
        "registry.npmjs.org",
        ".iriscouch.com",
        ".iriscouch.net",
        "checkip.dyndns.com",
        .localdomain; 
    policy = included;
    preset = on;
    lean_query = on;
}

server {
    label = "china telecom";
    root_server = no;
    
    randomize_servers = on;
    ip = 202.96.128.166, 202.96.134.133;
    timeout = 1;
    uptest = none;
    // uptest_cmd = "exit 0";
    interval = 30m;      // Test every half hour.
    ping_timeout = 300;  // 30 seconds.
    purge_cache = off;
    exclude = .localdomain, ".twitter.com", ".facebook.com";
    policy = included;
    preset = on;
}

server {
    label = "google";
    root_server = no;
    
    randomize_servers = on;
    ip = 8.8.8.8, 8.8.4.4;
    timeout = 4;
    uptest = none;
    // uptest_cmd = "exit 0";
    interval = 30m;      // Test every half hour.
    ping_timeout = 300;  // 30 seconds.
    purge_cache = off;
    exclude = .localdomain, ".cn", ".taobao.com";
    policy = included;
    preset = on;
}
/*
server {
    label = "root-server";
    root_server = on;
    randomize_servers = on;
    ip = 198.41.0.4
    ,    192.228.79.201
    ,    192.33.4.12
    ,    128.8.10.90
    ,    192.203.230.10
    ,    192.5.5.241
    ,    192.112.36.4
    ,    128.63.2.53
    ;
    timeout = 5;
    uptest = query;
    interval = 30m;      // Test every half hour.
    ping_timeout = 300;  // 30 seconds.
    purge_cache = off;
    exclude = .localdomain;
    policy = included;
    preset = off;
}
*/
source {
    owner = localhost;
    file = "/etc/hosts";
}

rr {
    name = test-abc;
    reverse = on;
    a = 127.0.0.2;
    owner = test-abc;
}

rr {
    name = localhost;
    reverse = on;
    a = 127.0.0.1;
    owner = localhost;
    soa = localhost,root.localhost,42,86400,900,86400,86400;
}

rr {
    name = ipv4.tunnelbroker.net;
    a = 64.62.200.2;
}

rr {
    name = checkip.dyndns.com;
    a = 216.146.38.70;
    a = 216.146.39.70;
    a = 216.146.43.70;
}

/* vim:set ft=c: */
